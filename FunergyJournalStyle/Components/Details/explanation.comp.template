#?delimiters [%, %], [%=, %]
<wr:LayoutParameter label="Width" name="width" type="enum" default="card" values="full|inset|card">
Defines the width of the component inside their container.
Allowed values are:
- full: use the full width available
- inset: add a margin
- card: add a margin and a shadow
</wr:LayoutParameter>
<wr:LayoutParameter label="Events Style" name="events-style" type="enum" default="none" values="none|button-bar|tabs">
Defines the style of the events.
</wr:LayoutParameter>
<wr:LayoutParameter label="Use Empty Message" name="use-empty-component-message" type="boolean" default="false">
Defines the usage of a message for empty components.
Allowed values are: true or false.
</wr:LayoutParameter>
<wr:LayoutParameter label="Empty Message Key" name="empty-component-message" type="string" default="emptyComponentMessage">
Defines the key of the message to use if the component is empty.
Default value: emptyComponentMessage
</wr:LayoutParameter>
[%
setHTMLOutput()

def eventTabs = params["events-style"] == "tabs"
def listClass = (params["width"] != "full") ? params["width"] : ""
listClass = (listClass == "inset") ? "list-" + listClass : listClass

def attrs = component.selectNodes("layout:Attribute")
def attrsCount = attrs.size()
def hasEvents = component.selectSingleNode("layout:Event") != null

def avatar = (attrsCount && attrs[0]["type"] == "blob" && (attrs[0]["contentType"] == "" || attrs[0]["contentType"].startsWith("image"))) ? attrs[0] : null
def title = attrs.find{it["type"] != "blob"}
def subtitle = attrs.find{it["type"] != "blob" && it != title}

def useEmptyComponentMessage = params["use-empty-component-message"] == "true"
def emptyComponentMessage = params["empty-component-message"]
%]
<div class="<wr:StyleClass/> expl wr-comp-Details">
	<div ng-if="view.data" class="list">
		<wr:Frame>
			[% if (attrsCount > 0) { %]
				<div class="item [%= (avatar) ? ((attrsCount > 1) ? "item-avatar" : "item-image") : "" %]">
					[% if (avatar) { %]
						<wr:Value context="avatar" class="item-image"/>
					[% } %]
					[% if (title) { %]
						<h2><wr:Value context="title"/></h2>
					[% } %]
					[% if (subtitle) { %]
						<p><wr:Value context="subtitle"/></p>
					[% } %]
				</div>
			[% } %]
			<wr:Iterate var="attr" context="component" select="layout:Attribute">
				[% if (attr != avatar && attr != title && attr != subtitle) { %]
					[% if (attr["type"] == "blob") { %]
						<div class="item item-image">
							<wr:Value/>
						</div>
					[% } else { %]
						<div class="item item-attribute item-body">
							<wr:Label/>
							<p><wr:Value/></p>
						</div>
					[% } %]
				[% } %]
			</wr:Iterate>
			[% if (hasEvents) { %]
				<div class="[%= (eventTabs) ? "item " : "" %][%= (params["events-style"] != "none") ? params["events-style"] : "item-buttons" %]">    
					<wr:Iterate var="event" context="component" select="layout:Event">
						[% if (eventTabs && !getLayout(event, LayoutType.EVENT).path.endsWith("Tab")) { 
								throwGenerationException("Use Tab event template for ${event['name']} (${event['id']})")
							}
						%]
						<wr:Event/>
					</wr:Iterate>
				</div>
			[% } %]
		</wr:Frame>
	</div>
	[% if (useEmptyComponentMessage) { %]
		<div ng-if="!view.data" class="wr-empty-message list [%= listClass %]">
			<wr:Frame>
				<div class="item item-text-wrap">
					{{ '[%= emptyComponentMessage %]' | wrLocalize }}
				</div>
			</wr:Frame>
		</div>
	[% } %]
</div>